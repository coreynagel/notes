0:00:00.000,0:00:01.240

0:00:01.240,0:00:03.250
PROFESSOR: So, let's talk
about its properties.

0:00:03.250,0:00:04.840
What does it expand?

0:00:04.840,0:00:08.750
It expands the top node, and the next b
on the next layer, and then the next

0:00:08.750,0:00:13.840
b squared on the second layer below
that, and so on until you hit a layer

0:00:13.840,0:00:15.650
that has a solution.

0:00:15.650,0:00:18.970
And then you'll hit the first
of those solutions you find.

0:00:18.970,0:00:22.890
So we process all nodes above
the shallowest solution.

0:00:22.890,0:00:24.120
How many are there?

0:00:24.120,0:00:27.270
That's going to tell us
the time complexity.

0:00:27.270,0:00:30.940
Still exponential, except now we
don't have to go all the way

0:00:30.940,0:00:31.930
down to depth m.

0:00:31.930,0:00:34.920
How deeply do we have to go?

0:00:34.920,0:00:36.370
Depends on how deep the solution is.

0:00:36.370,0:00:38.550
So let's let s be the
shallowest solution.

0:00:38.550,0:00:42.310
That means we're only going to process
these s tiers, and that means that the

0:00:42.310,0:00:48.630
time, the number of nodes we have to
expand is going to be b to the s.

0:00:48.630,0:00:49.720
So the search is going to take time.

0:00:49.720,0:00:54.180
It's still exponential, but now it's not
the depth of the entire tree, but

0:00:54.180,0:00:57.780
just the depth of the
shallowest solution.

0:00:57.780,0:01:00.910
How much space does our fringe
take in all of this?

0:01:00.910,0:01:02.430
Well, what's our fringe like?

0:01:02.430,0:01:04.190
What was it like when we
hit this solution?

0:01:04.190,0:01:05.860
Here what was on the fringe?

0:01:05.860,0:01:10.590
Well, in general we hadn't actually
done everything on that level.

0:01:10.590,0:01:14.320
And everything that we did do on that
level had children on the next level.

0:01:14.320,0:01:17.640
So you know, more or less the
fringe looks like the last

0:01:17.640,0:01:18.770
tier that we expanded.

0:01:18.770,0:01:21.560
Maybe kind of one tier below that.

0:01:21.560,0:01:22.370
So that's good, right?

0:01:22.370,0:01:24.780
It's not all the stuff above us.

0:01:24.780,0:01:26.050
So this thing's growing exponentially.

0:01:26.050,0:01:29.220
That's basically the whole graph
is on the last level, right?

0:01:29.220,0:01:31.440
And so the fringe is now
exponential as well.

0:01:31.440,0:01:34.820
That's a disadvantage to breadth-first
search is the fringe is very large,

0:01:34.820,0:01:37.550
and the advantage is because you're
being so thorough, you try all the

0:01:37.550,0:01:42.360
cheap stuff first, you're going to
find the shallowest solution.

0:01:42.360,0:01:45.270
Is this algorithm complete?

0:01:45.270,0:01:48.920
Well, you can do the first layer
and the second layer and so on.

0:01:48.920,0:01:52.170
Is it going to be complete?

0:01:52.170,0:01:52.510
Yeah.

0:01:52.510,0:01:57.560
So if a solution exists, it has
to exist at some finite level.

0:01:57.560,0:01:59.555
And you're only going
to go down that far.

0:01:59.555,0:02:01.830
Now, you could worry about cases like
what if the branching factor is

0:02:01.830,0:02:04.940
infinite, and so on, but with
appropriate, reasonable assumptions

0:02:04.940,0:02:10.240
here, yes, it will be finite because
you only have to go so deep.

0:02:10.240,0:02:13.890
And unlike leftmost prefixes so the
graph, which can be infinite, kind of

0:02:13.890,0:02:17.110
top prefixes of the graph are finite.

0:02:17.110,0:02:18.360
Is it optimal?

0:02:18.360,0:02:21.230

0:02:21.230,0:02:22.640
That's a little bit of an
ill-defined question.

0:02:22.640,0:02:23.920
Depends on the costs.

0:02:23.920,0:02:28.890
If the costs are general costs, right,
it could be that this solution is

0:02:28.890,0:02:31.210
actually cheaper than this one,
even though it's deeper.

0:02:31.210,0:02:32.460
So in general, no.

0:02:32.460,0:02:35.550
But if the costs are all one, then
yes, this will be optimal.

0:02:35.550,0:02:37.100

